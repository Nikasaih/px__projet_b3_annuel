version: "3.8"

services:
  #---------------------------
  #NGINX
  #---------------------------
  nginx:
    container_name: nginx
    image: nginx:1.16.0-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - securitygw

  #---------------------------
  #MICROSERVICES (API)
  #---------------------------
  #Store microservice
  store:
    container_name: store
    build: ./store
    expose: ["8081"]
    depends_on:
      - mysql_db
      - elastic_db

  #Storerate microservice
  storerate:
    container_name: storerate
    build: ./storerate
    expose: ["8083"]
    depends_on:
      - mysql_db

  #Securitygw microservice
  securitygw:
    container_name: securitygw
    build: ./securitygw
    expose: ["8082"]
    ports:
      - 8082:8082
    depends_on:
      - mysql_db
      - storerate
      - store
  #---------------------------
  #DATABASES
  #---------------------------
  #MySql
  mysql_db:
    container_name: mysql_db
    image: "mariadb:10.5.8"
    volumes:
      - ./database/sql:/var/lib/mysql
    expose: ["3306"]
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: prod_sdv_bdd
      MYSQL_ROOT_PASSWORD: root

  #ElasticSearch
  elastic_db:
    container_name: elastic_db
    image: "bitnami/elasticsearch"
    volumes:
      - ./database/sql:/usr/share/elasticsearch/data
    expose: ["9300"]
  #---------------------------
  #MONITORING
  #---------------------------

  #CADVISOR
  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:rw
      - /var/lib/docker:/var/lib/docker:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    depends_on:
      - nginx

  #PROMETHEUS
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.route-prefix=/"
      - "--web.external-url=/monitoring/prometheus/"

  #GRAFANA
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./monitoring/grafana/grafana.ini:/etc/grafana.ini
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/data:/var/lib/grafana
    user: "1000"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
